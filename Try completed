import pandas as pd
import os
from datetime import datetime
from openpyxl import load_workbook
from openpyxl.styles import PatternFill, Font

# Input Excel file
input_file = "input.xlsx"

# Output folder
output_folder = "output_groups"
os.makedirs(output_folder, exist_ok=True)

# Read both sheets
data_df = pd.read_excel(input_file, sheet_name="Sheet1")
mapping_df = pd.read_excel(input_file, sheet_name="Sheet2")

# Mapping dict for Assignment Group → Tower
mapping_dict = dict(zip(mapping_df["Assignment Group"], mapping_df["Tower"]))

# --- Rename columns as per template ---
rename_map = {
    "Number": "Call Reference",
    "Created": "Open-date",
    "Description": "Problem Summary",
    "Assignment Group": "Application Name",
    "Task type": "Call Type",
    "Short description": "Title",
    "Closed": "Closed At",
    "Closed by": "Closed by (Person)"
}
data_df.rename(columns=rename_map, inplace=True)

# Format dates (Open-date, Closed At)
for col in ["Open-date", "Closed At"]:
    if col in data_df.columns:
        data_df[col] = pd.to_datetime(data_df[col], errors="coerce").dt.strftime("%m-%d-%Y")

# Priority cleanup (only first part before dash)
if "Priority" in data_df.columns:
    data_df["Priority"] = data_df["Priority"].astype(str).str.split("-").str[0].str.strip()

# --- Create extra columns ---
data_df["Potential Cause"] = ""
data_df["Fixed By (Person)"] = data_df.get("Closed by (Person)", "")
data_df["Failure Point"] = ""
data_df["Process"] = ""
data_df["Module"] = ""
data_df["Region"] = ""
data_df["Solution Text"] = ""

# --- Final column order ---
final_cols = [
    "Call Reference", "Open-date", "Problem Summary", "Potential Cause", "Category",
    "Application Name", "Call Type", "Title", "Priority", "Closed At",
    "Closed by (Person)", "Fixed By (Person)", "Failure Point", "Process",
    "Module", "Region", "Solution Text"
]
data_df = data_df[[col for col in final_cols if col in data_df.columns]]

# --- Current month for filenames ---
current_month = datetime.now().strftime("%B%Y")

# --- Process each Assignment Group ---
for group_name, group_data in data_df.groupby("Application Name"):
    tower_name = mapping_dict.get(group_name, "UnknownTower")

    # Adjust group name (small 'g' in group)
    safe_group = str(group_name).replace("Group", "group")
    safe_tower = str(tower_name).replace("/", "_").replace("\\", "_").replace(" ", "_")
    safe_group = safe_group.replace("/", "_").replace("\\", "_").replace(" ", "_")

    # Filename
    file_name = f"{safe_tower}_{safe_group}_{current_month}.xlsx"
    output_file = os.path.join(output_folder, file_name)

    # Save to Excel with sheet name = FMAData
    group_data.to_excel(output_file, sheet_name="FMAData", index=False)

    # --- Apply formatting with openpyxl ---
    wb = load_workbook(output_file)
    ws = wb["FMAData"]

    # Colors
    yellow_fill = PatternFill(start_color="FFFF00", end_color="FFFF00", fill_type="solid")
    red_font = Font(color="FF0000", bold=True)
    blue_fill = PatternFill(start_color="0000FF", end_color="0000FF", fill_type="solid")
    white_font = Font(color="FFFFFF", bold=True)

    # Header row styling
    headers = [cell.value for cell in ws[1]]
    for col_idx, col_name in enumerate(headers, start=1):
        cell = ws.cell(row=1, column=col_idx)
        if col_name in ["Call Reference", "Open-date", "Problem Summary", "Potential Cause", "Category", "Application Name", "Call Type"]:
            cell.fill = yellow_fill
            cell.font = red_font
        elif col_name in ["Title", "Priority", "Closed At", "Closed by (Person)", "Fixed By (Person)",
                          "Failure Point", "Process", "Module", "Region", "Solution Text"]:
            cell.fill = blue_fill
            cell.font = white_font

    wb.save(output_file)
    print(f"Saved: {output_file}")

print("✅ All FMA reports generated with template, formatting, and naming conventions.")
